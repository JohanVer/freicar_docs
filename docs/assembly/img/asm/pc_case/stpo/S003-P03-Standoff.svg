<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="297.000mm" height="210.000mm" viewBox="0.000000 0.000000 297.000000 210.000000" stroke-linejoin="round" stroke-linecap="round" fill="none" fill-rule="evenodd"><desc>Composer Export</desc><script type="text/ecmascript"><![CDATA[
if(typeof(top) != "undefined")
{
	top.ShowPaper = ShowPaper;
}
function ShowHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity",".5");
}
function HideHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity","0");

	var toolTip = svgDocument.getElementById('ToolTip');
	if(toolTip)
		toolTip.setAttribute("visibility","hidden");
}
function ShowToolTip(evt,hotspotid,strTooltip)
{
	if(strTooltip=="")
	return;

	// change text
	var svgDocument = evt.target.ownerDocument;
	var tiptext = svgDocument.getElementById('ToolTipText');
	if( !tiptext )
	return;
	tiptext.firstChild.nodeValue = " " + strTooltip + "  " ;

	// show tooltip before, else some refresh issue

	var toolTip = svgDocument.getElementById('ToolTip');
	if(!toolTip)
	return;

	toolTip.setAttribute("visibility","visible");
	toolTip.setAttribute("opacity",".95");

	// move tooltip
	// get viewbox

	var root = svgDocument.documentElement;
	var vbox = (root.getAttribute("viewBox")).split(' ');
	var x0 = parseFloat(vbox[0]);
	var y0 = parseFloat(vbox[1]);
	var vboxW = parseFloat(vbox[2]);
	var vboxH = parseFloat(vbox[3]);

	// get default width of svg

	var strW = root.getAttribute("width");
	var svgW = parseFloat(strW);
	if(strW.indexOf('mm') != -1)
	svgW *= 3.779;

	var strH = root.getAttribute("height");
	var svgH = parseFloat(strH);
	if(strH.indexOf('mm') != -1)
	svgH *= 3.779;  	// 96 dpi  -> 96/25.4 = 3.779

	// update the viewbox / width / height if svg is embedded in html with zoom fit all
	var realx0 = x0;
	var realy0 = y0;
	var realvboxW = vboxW;
	var realvboxH = vboxH;
	var realsvgW = svgW;
	var realsvgH = svgH;

	if ((typeof(top) == "undefined") || (typeof(top.svgctl1) != "undefined")) // embedded in html
	{
		// get window size in pxl

		svgW = window.innerWidth;
		svgH = window.innerHeight;

		// calculate real viewbox

		realsvgW = svgW;
		realsvgH = svgH;
		if((svgW / svgH) > (vboxW / vboxH))
		{
			realvboxW = (vboxH * svgW) / svgH;
			realvboxH = vboxH;
			realx0 = x0 - (realvboxW - vboxW)/2 ;
		}
		else
		{
			realvboxH = (vboxW * svgH) / svgW;
			realvboxW = vboxW;
			realy0 = y0 - (realvboxH - vboxH)/2 ;
		}
	}

	// get user zoom/pan

	var newScale = root.currentScale;
	var translation = root.currentTranslate;

	// transform pxl to user unit

	var xPos = (((evt.clientX+10- translation.x)/newScale) * realvboxW)/realsvgW  + realx0 ;
	var yPos = (((evt.clientY+5- translation.y)/newScale) * realvboxH)/ realsvgH  + realy0 ;
	var scaleForWidth = ( (1 / newScale) * realvboxH) / realsvgH;

	// move tooltip

	toolTip.setAttribute("transform", "translate(" + xPos + "," + yPos + ")" );

	// resize tooltip

	var fontsize = 12;
	tiptext.setAttribute("font-size",fontsize*scaleForWidth);
	tiptext.setAttribute("y", fontsize*scaleForWidth);
	var tipBG = svgDocument.getElementById('ToolTipBG');
	var outline = tiptext.getBBox();
	if(tipBG)
	{
		tipBG.setAttribute("stroke-width", 1*scaleForWidth);
		tipBG.setAttribute("width", Number(outline.width) );
		tipBG.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
	}
	var ToolTipShadow = svgDocument.getElementById('ToolTipShadow');
	if(ToolTipShadow)
	{
		ToolTipShadow.setAttribute("width", Number(outline.width) );
		ToolTipShadow.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
		ToolTipShadow.setAttribute("x", 3*scaleForWidth);
		ToolTipShadow.setAttribute("y", 3*scaleForWidth);
	}
}
function ShowPaper()
{
  var svgDocument = getDocument();
  var paper = svgDocument.getElementById("paperID");
  if(paper)
  {
    paper.setAttribute("transform","scale(1)");
    paper.setAttribute("opacity","1");
    paper.setAttribute("visibility","visible");
  }
  var svg = svgDocument.getRootElement();
  if(svg)
  {
    svg.setAttribute("width","307.000mm");
    svg.setAttribute("height","220.000mm");
    svg.setAttribute("viewBox","-5.000000 -5.000000 307.000000 220.000000");
  }
}
]]></script><defs/><g><g id="Actor_3.0"><g style="stroke:#000020;stroke-width:0.079"><path d="M210.55,152.28 C210.37,154.37 210.37,154.37 210.17,156.46 C210.08,156.72 210.08,156.73 209.96,156.98 C208.74,158.69 208.76,158.72 207.51,160.39 C206.08,161.71 206.06,161.70 204.59,162.98 C202.82,164.32 202.82,164.31 201.03,165.64 C200.07,166.28 200.07,166.27 199.11,166.90 C198.10,167.51 198.10,167.52 197.09,168.12 C192.64,170.30 192.65,170.31 188.18,172.45 C185.96,173.32 185.96,173.33 183.71,174.13 C180.18,174.96 180.17,174.99 176.62,175.70 C172.84,175.85 172.82,175.85 169.04,175.84 C165.29,175.27 165.27,175.27 161.56,174.54 C158.18,173.24 158.15,173.23 154.83,171.77 C124.17,154.17 124.15,154.17 93.58,136.41 C91.12,134.52 91.10,134.51 88.75,132.48 "/><path d="M87.10,122.98 C89.75,114.54 89.75,114.54 92.45,106.10 C97.69,90.59 97.70,90.59 102.97,75.09 C103.65,73.28 103.66,73.28 104.35,71.47 C109.90,56.31 109.90,56.31 115.45,41.15 "/><path d="M209.79,149.56 C207.33,138.70 207.33,138.70 204.84,127.85 C200.05,108.06 200.06,108.05 195.23,88.28 C193.94,83.58 193.90,83.59 192.61,78.89 C190.28,69.55 190.34,69.53 187.98,60.20 C186.43,55.43 186.43,55.42 184.78,50.69 "/><path d="M204.55,130.73 L210.55,152.28 "/><path d="M88.75,132.48 L86.45,127.85 L86.83,123.67 L87.10,122.98 L86.81,123.88 "/><path d="M87.20,122.67 L87.10,122.98 "/><path d="M95.83,142.26 L95.83,137.71 "/><path d="M172.76,175.77 L172.76,186.66 "/><path d="M180.30,39.05 L183.74,46.83 L185.65,53.90 "/><path d="M194.95,88.34 L192.61,78.89 "/><path d="M201.27,165.46 L201.27,185.65 "/><path d="M197.23,168.03 L196.86,168.25 "/><path d="M201.282 185.649 a14.315 8.265 -0.001 0 1 -28.522 1.011"/><ellipse rx="34.36" ry="19.84" transform="translate(148.499 46.558) rotate(-180.000)"/><path d="M115.264 148.927 a14.315 8.265 -180.000 0 1 -19.433 -6.672"/><ellipse rx="14.32" ry="8.26" transform="translate(148.500 46.559) rotate(-180.000)"/></g></g><g/><g id="paperID" visibility="hidden" opacity="0.00" transform="scale(0.000100)"><path style="stroke:#000000;stroke-width:0.500;fill:#e6e6e6;fill-rule:evenodd" d="M-2000.00,-2000.00L2297.00,-2000.00L2297.00,2210.00L-2000.00,2210.00zM0.00,0.00L297.00,0.00L297.00,210.00L0.00,210.00z"/><path style="fill:#000000;fill-opacity:0.118" d="M3.00,210.00L297.00,210.00L297.00,3.00L300.00,3.00L300.00,213.00L3.00,213.00z"/></g><g id="hotspot.0" ident="" onmouseover="ShowHotSpot(evt,'0')" onmouseout="HideHotSpot(evt,'0')" onmousemove="ShowToolTip(evt,'0',&quot;Standoff 10mm&quot;)" opacity="0"><path style="fill:#00ff00;fill-rule:evenodd" d="M162.13,28.41L166.04,29.60L171.55,31.95L175.86,34.71L179.84,38.58L182.55,44.13L184.50,49.65L187.25,58.29L190.39,70.07L195.12,87.74L210.45,151.76L210.06,157.03L206.74,161.17L201.29,165.54L201.02,186.88L200.51,188.33L198.70,190.45L193.44,193.05L187.92,193.81L184.51,193.81L180.17,193.05L176.25,191.07L173.93,189.07L173.10,187.54L172.74,176.12L168.01,175.74L161.31,174.58L153.91,171.37L115.36,148.98L110.14,149.42L107.90,149.41L103.56,148.66L99.69,147.03L97.33,145.07L96.10,142.76L95.75,138.00L91.04,134.46L88.68,132.49L86.67,128.62L86.69,125.97L87.06,123.20L97.68,90.61L104.64,70.85L115.62,40.98L120.90,34.86L128.99,30.39L138.81,27.63L151.11,26.84z"/></g><g id="ToolTip" visibility="hidden" opacity="0" transform="translate(0,0)"><rect id="ToolTipShadow" opacity="0.20" fill="black" stroke="none" x="0" y="0" width="30" height="8"/><rect id="ToolTipBG" fill="#ffffe1" stroke="black" x="0" y="0" width="30" height="8"/><text xml:space="preserve" id="ToolTipText" fill="black" x="0" y="0" width="30" height="8">tooltip</text></g></g></svg>
